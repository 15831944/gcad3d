gCAD3D

provides functions for -
      import and export of cad-models and pictures (bitmaps)
      creation of geometrical objects
      NC-working, direct and programcontrolled
      preparation of data (building contours ..)
      analysis of data
      all objects can be connected with interactions
      add-on-programs (plugins)
      remote control


The creation of geometrical elements / NC-programs can be done by -
      interactively generated geometrical objects or
      manually generated command texts or by
      import modules (Dxf, Iges, Step ..) or by
      data file created by external program or by
      special import processors (user programs)


Interactions connect to geometric objects can -
      load models (like HTML - HREF)
      activate userprograms (plugins)
      modify the view
      modify modelparameters dynamically


The data can be exported from the program by -
      export modules ((Dxf, Iges, Vrml, Svg ..)
      Standard - ISO - post processor
      specialized export functions (user programs)
      the system format APT3D (ASCII text format)


The program interface makes possible -
      The creation and analysis of geometry Objects
      interactive dialogue functions (selections..)
      automatic compiling, link and reload at execution time




__________________________________________________________________
Linux Prerequisites:

  for modifications of gCAD3D:
    gcc, ctags, build-essential.
    (eg sudo apt-get install build-essential)


  for modifications of the gui-system C-KIT-GUI-GTK:
    Gtk-development-files (libgtk-3-dev and/or libgtk2.0-dev),
      OpenGL-development-files (eg mesa-common-dev, libglu1-mesa-dev).
      Installation of gtk3-development-files; eg for debian-os:
        sudo apt-get install libgtk-3-dev
        Optional:
        sudo apt-get install libgtk-3-doc
        sudo apt-get install gtk-3-examples
      Installation of gtk2-development-files; eg for debian-os:
        sudo apt-get install libgtk2.0-dev
        Optional:
        sudo apt-get install libgtk2.0-doc
        sudo apt-get install gtk2.0-examples


  for modification of the documentation:
    doxygen


  for building debian-package:
    fakeroot, lintian


__________________________________________________________________
Linux Install from git-repository:

# If possible: prefer installation from git-repository.
# start commandline (eg gnome-terminal)
cd
mkdir devel
cd devel

# get all files into ~/devel/gcad3d/*
git clone https://github.com/gcad3d/gcad3d


__________________________________________________________________
Linux Install from zipfile:

# start commandline (eg gnome-terminal)
cd
mkdir devel
cd devel

# get all files into ~/devel/gcad3d/*
cp xxx/gCAD3D_x.xx-src.zip .
unzip gCAD3D_x.xx-src.zip

cd gcad3d
mkdir -p binLinux32/plugins
mkdir -p binLinux64/plugins



_____________________________________
Linux Build:

The installed program gCAD3D uses system-directories,
- normal users cannot write to system-directories.
The development environment is using different directories,
- the program must be rebuilt (with ./do setup).


# goto APP-directory; normaly:
cd ~/devel/gcad3d/src/APP

# Script "do" has predefined functions; get infos with:
./do help

# first customize (create some directories, rebuild gCAD3D)
./do setup

# test it (start gcad)
./do


# optional:
# test to rebuild a plugin:
./do Demo_gui1.mak

# change gtk-version (sets VGUI in ../options.mak):
./do guiinit

# ReCreate development-documentation (doygen must be installed):
cd ~/devel/gcad3d/doc
./gcad_doxygen.sh

# view development-documentation:
xdg-open ~/devel/gcad3d/doc/gcad/index.htm

# after modification of sourcefiles, rebuild gcad:
./do c



#---------------------------------------------------------
# Create new gcad-Version:
# Modifys gcad_version, gcad_date; create xa/gcad_version.h:
cd ~/devel/gcad3d/src
./NEW_VERSION1.sh

# create debian-package (binary, gCAD3D-#.##-bin-xxxxx.deb):
cd ~/devel/gcad3d/debian
./pack_deb.sh

# create source-package (gCAD3D-#.##-src.zip):
cd ~/devel/gcad3d
./pack_src.sh


#---------------------------------------------------------
# DEVELOPMENT-TOOLS-TAGFILES:
# If you are using vim: jump into functions with tagfiles:
# in directory APP_tests tagfiles can be used with vim.

# Add in .vimrc:
  let tagfiles = system("ls -m *.tag |sed \"s/ //g\"")
  "echo tagfiles
  let &tags = substitute(tagfiles, "\n", "", "g")

# Using tagfiles:
  cd ~/devel/gcad3d/src/APP
  vi -t UME_init
# or use "Ctr-R" inside vim with cursor over function, Ctrl-O = back.


#---------------------------------------------------------
# DEVELOPMENT-TOOLS-CSCOPE:
# Use cscope with:
  cd ~/devel/gcad3d/src/APP
  ./ed
    update EDITOR in file ~/devel/gcad3d/src/APP/ed.


__________________________________________________________________
Linux Uninstall:
cd ~/devel
rm -rf gcad3d





==================================================================
MS-Windows 
==================================================================
Prerequisites:


for using gCAD3D:
  nothing; all necessary libs are included.


for modifications of gCAD3D:
  MS-C-Compiler (gcc or MS-Visual-C (C++, Express); eg VS-2010)
  OpenGL32.lib, Glu32.lib (Microsoft SDKs)
  optional: get the gtk-dokumentation from www.gtk.org.

  // You will need a commandshell with the correct compiler-environment.
  // You can use the Visual-Studio-Commandwindow or cmd.exe;  e.g. for VC8:
  "C:\Programme\Microsoft Visual Studio 8\Common7\Tools\vsvars32.bat"
  // or for VC9:
  "%VS90COMNTOOLS%vsvars32.bat"
  // or for VC10 - start a commandwindow with:
  %comspec% /k ""C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" x86
  // Test MS-compiler with:
  cl /?


for creating new MS-Win-install-package:
  NSIS-installer / uninstaller from Nullsoft (http://nsis.sf.net)
  %ProgramFiles%\NSIS\NSIS.chm  // see help-file in cmd-window


MS-Windows install the binary package (Win-XP Win7 Win8):
  selfextracting (NSIS-installer).
  The registry is never affected / modified.


MS-Windows install the source package from zip-file (Win-XP Win7 Win8):
  // start commandshell (cmd);
  // Create new directory %HOMEDRIVE%%HOMEPATH%/devel
  %HOMEDRIVE%       // activate the homedrive
  cd %HOMEPATH%     // goto homepath
  mkdir devel       // create new directory
  cd devel          // goto %HOMEPATH%/devel
  // Extract the package gCAD3D_#.##-src.zip into this directory
  unzip gCAD3D_#.##-src.zip


Update definiton-file gCAD3D.def
  // create new file gCAD3D.def in Linux (from linux-executable):
  ./gendef.sh
  // or update gCAD3D.def manually.


Rebuild:
  %HOMEDRIVE%                     // activate the homedrive
  cd %HOMEPATH%\devel\gcad3d\src\APP
  do c            // reCreate exe
  do gui          // reCreate gui-lib
  do help         // disp help for do.bat


Create MS-Win-install-package (binary, gCAD3D-#.##-win32.exe)
  cd %HOMEPATH%\devel\gcad3d\pack_MS
  pack


// view documentation:
  cd %HOMEPATH%\devel\gcad3d
  hh doc\gcad\index.htm




__________________________________________________________________
History:

2016-05-12 V2.32 new: export jpg, pdf. RF.
2016-03-16 V2.30 Demo_toolbar2, DXF-export BLOCKS, bugfixes. RF.
2015-08-21 V2.28 Demo_toolbar1, Demo_appDat1, UNDO-plugin, bugfixes. RF.
2015-06-22 V2.26 Bugfixes. RF.
2015-03-14 V2.25 MS-Win version added to git. RF.


// EOF
