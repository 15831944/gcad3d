<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
  <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
  <TITLE>gCAD3D_basics_en.htm</TITLE>
  <meta name="description" content="gCAD3D-Documentation">
<STYLE TYPE="text/css">
  H1 { color: #000000; font-family:"Helvetica"; font-size:32pt; font-weight:medium }
  H3 { color: #000000; font-family:"Helvetica"; font-size:16pt; font-weight:medium }
  H4 { color: #000000; font-family:"Helvetica"; font-weight:medium }
  hr { border: none; width: 100%; height: 8; background: #ffcc99;}
</STYLE>
</HEAD>
<BODY LANG="en-US"
      style="font-family:Helvetica; font-size:12pt; font-weight:normal;">
<PRE>




<H1>gCAD3D</H1>

<A HREF="gCAD3D_feat_en.htm">Features</A>
<A HREF="gCAD3D_princ_en.htm">Principles of operation</A>
<A HREF="#L1">What gCAD3D can and cannot do</A>


<A HREF="VWR_en.htm">VWR</A>                viewer
<A HREF="MAN_en.htm">MAN</A>                manual text entry
<A HREF="CAD_using_en.htm">CAD</A>                interactive graphic modelling


<A HREF="#MMS">Multi-model support</A>
<A HREF="CAD_Activ_en.htm">Interactions</A>
<A HREF="AddOn_en.htm">Add-On Programs</A>    RemoteControl Processes ScriptPrograms Plugins
<A HREF="Video_en.htm">Tutorial-videos</A>
<A HREF="#DF">Functions for documentation</A>


<A HREF="CAD_Base_en.htm">Codes - Formats</A>
<A HREF='file_format_en.htm'>gcad file format</A>


<A HREF="../install_en.txt">Installation</A>
<A HREF="../build_en.txt">Build</A>
<A HREF="dev_doc_en.htm">Development-tools</A>
<A HREF="dev_doc_en.htm">Development-documentation</A>


<A HREF="gCAD3D_lic_en.htm">License Authors Support</A>
<A HREF="#EG">Development History of gCAD3D</A>





<HR>
<H3><A NAME="L1"></A>What gCAD3D can and cannot do</H3>

  
It can
  
  Import and display data from Iges, Step, wire frame and solid objects 
  Create and modify wire frame elements
  Create surfaces
  Create simple solid bodies
  Assemble user-created ancillary programmes
  Export wire frame elements as Dxf and Iges
  Export surfaces as Vrml-1, Vrml-2, obj, tw Iges
    
    
It cannot yet
  
  Create or modify complex solid bodies




<HR>
<H3><A NAME="MMS"></A>Multi-model support</H3>
A model can consist of multiple models
(sub-models). A sub-model can be stored within a model (an internal
sub-model) or be imported from external data (an external sub-model)</P>
<H4>Internal models</H4>
The model name must
not include a path (and no '/' or '\'). During the processing of
sub-models the sub-model name is cached in /tmp/Mode_ . All internal
sub-models are saved inside the model file</P>

Creation of sub-models

  sub-models/move main → new sub-model
  Copies all objects of the active main model to a sub-model
  sub-models/create new sub-model
  Construct and activate a new sub-model
  sub-models/load sub-model from file
  Load a native model from data into a new sub-model<DD STYLE="margin-bottom: 0.5cm">
  
Using internal sub-models in Cad mode:</P>

  with the function 'M-int.Modell'
  Select sub-models from a list (using MM middle mouse button) or by
  selecting a prepared sub-model; Define the model instance position.
  

Using internal sub-models in Manual mode:</P>

  by keying in as<DD STYLE="margin-bottom: 0.5cm">
  M20=”subModell” P(0 0 0) DZ DIY
<H4>
External sub-models</H4>

  For these models an
  external model file must be given. The model name must be a symbolic
  path. The model file must be in a directory that can be referenced
  by a symbol; See symbolic file names.
  External models can only = mock-up models (ie Wrl), but cannot
  include internal or external sub-models.
  External sub-models are internally cached.

Use of external sub-models in Cad mode

  Use function 'M-ext.Modell'
  Selecting sub-models from a list (middle mouse button in the
  graphics window) or by selecting existing sub-models;
  Define the instance position

  

Use of external models in Man mode:

  By keying In as
  M28=”Data/Mod1.gcad” P (0 0 0) DZ DIY




<HR>
<H3><A NAME="DF"></A>Functions for documentation</H3>

  - Display of 2D drawings, 3D models and images in the same display space.
  - drawings/ models can be generated by scripts / templates
  - all display objects can be combined with interactions



  




<HR>
<p><a name="EG"></a></p>
<B>Development History of gCAD3D</B>

1995  The first version named xcad only for Linux and AIX.
      Graphics and User Interface with X11. 
1998  First version with the name gcad.
      Graphics with OpenGL (Mesa), with GTK user interface.
      The name corresponds to the abbreviated version of GTK CAD.
1999  gcad was renamed gCAD3D (since approximately 1998 there also
      a gcad by Inigo Serna Robledo did exist) 
2003  New CAD engine. Ported to MS-Windows. 
2005  Step-import. 
2006  Textures. 
2007  Standard Parts (catalogue). 
2008  Script progams. 
2010  64-bit-Version Linux.
2011  neutral GUI-Interface, Gtk3-Interface
2012  Debian-packages
2013  RemoteControl, Processes.
2015  License changed to GPL-3.




<p><a name="GC_DEL"></a></p>

</PRE>
</BODY>
</HTML>
